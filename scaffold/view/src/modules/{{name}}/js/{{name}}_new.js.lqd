/* eslint-disable no-trailing-spaces */
import React from 'react'
import PropTypes from 'prop-types'

import { withTheme } from '@material-ui/core/styles'
import withStyles from '@material-ui/core/styles/withStyles'
import Footer from 'components/Footer/Footer.jsx'

import moduleStyle from "assets/jss/moduleStyle.jsx"

import {EventBus} from '../../../lib/js/eventBus'
import {store} from '../../../lib/js/store'

import { {{class_name}} } from './{{name}}'
import {{class_name}}Form from './{{name}}_form'

class {{class_name}}NewComponent extends React.Component {
  constructor (props) {
    super(props)

    this.state = new {{class_name}}({
      {% for field in visible_fields -%}
    {% if field.name != "user" -%}
    {% if field.type == "reference" -%}
    {{"  "}}{{field.name}}_id: '',
    {% else -%}
{{"      "}}{{field.name}}: '',
    {% endif -%}
    {% endif -%}
    {% endfor %}
    })
  }

  onBack () {
    this.props.history.goBack()
  }

  onChange (event) {
    this.setState({ [event.target.name]: event.target.value })
    EventBus.emit('field:changed:{{name}}', event.target.name)
  }

  onSubmit (event) {
    event.preventDefault();
    let {{name}} = new {{class_name}}(this.state)
    {{name}}.save().then(this.onBack.bind(this))
    .catch((error, statusText) => {
      store.handleErrors('Add', '{{name}}', statusText, error)
    });
  }

  render () {
    const { classes, ...rest } = this.props
    return (
      <div style={ { width: '100%' } }>
        <div className={classes.pageHeader} >
          <div className={classes.container}>
            <div className="btn btn-primary btn-xs {{name}}-new-back-button new-back-button"
              onClick={this.onBack.bind(this)}
            >
              Back
            </div>
            <{{class_name}}Form {{name}}={this.state}
              onSubmit={this.onSubmit.bind(this)}
              onChange={this.onChange.bind(this)}/>
          </div>
          <Footer whiteFont/>
        </div>
      </div>
    )
  }
}

{{class_name}}NewComponent.proptypes = {
  classes: PropTypes.object.isRequired,
  theme: PropTypes.object.isRequired,
  location: PropTypes.object.isRequired,
  history: PropTypes.object.isRequired
}

export const {{class_name}}New = withStyles(moduleStyle, { withTheme: true })({{class_name}}NewComponent)
